?php

namespace App\Http\Controllers;
use App\Models\Profile;
use Validator;
use App\Models\Driver;
use App\Http\Resources\Taxi as TaxiResources;
use App\Http\Controllers\BaseController as BaseController;
use Illuminate\Support\Facades\Hash;
use Illuminate\Support\Facades\Auth;

use Illuminate\Http\Request;

class ProfileController extends BaseController
{
    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function index()
    {
        $user = Auth::guard('driver');
        $id = Auth::id();
        if ( $user->profile() == null) {
            return $this->sendError('your profil is empty',$errormessage);

        }

        return $this->sendResponse(new TaxiResources($user),'user profile successfully');

    }

    /**
     * Show the form for creating a new resource.
     *
     * @return \Illuminate\Http\Response
     */
    /**
     * Store a newly created resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return \Illuminate\Http\Response
     */
    /*public function store(Request $request)
    {
        $input= $request->all();
        $user = Auth::guard('driver');
        $input['driver_id']=$user->id;
        if($request->image && $request->image->isValid())
        {
            $file_extension = $request->image->extension();
            $file_name = time() . '.' . $file_extension;
            $request->image->move(public_path('images/drivers'), $file_name);
            $path = "public/images/drivers/$file_name";
            $input['image']=$path; //$user->image = $path         $user = id

        }
        $user->update();
    }*/

    /**
     * Display the specified resource.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */

    /**
     * Show the form for editing the specified resource.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */

    /**
     * Update the specified resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function update(Request $request)
    {
        $input= $request->all();
         $validator = validator($input, [
            'name' => 'requierd',
            'gender' => 'requierd',
            'typeofcar' => 'requierd',
            'number' => 'requierd',
             ]);
             if ($validator->fails()) {
                return $this->sendError('validator error', $validator->errors());
            }
             $user = Auth::guard('driver');
             $input['driver_id']=$user->id;
             if ($request->has('name')){

               $user->name  =$input['name'];
               $user->save();
             }
             if ($request->has('gender')){

                $user->gender  =$input['gender'];
                $user->save();
              }


              if ($request->image && $request->image->isValid()){

                $file_extension = $request->image->extension();
                $file_name = time() . '.' . $file_extension;
                $request->image->move(public_path('images/drivers'), $file_name);
                $path = "public/images/drivers/$file_name";
                $user->image = $path; //       $user = id
              }
              $user->update();

              if ($request->has('typeofcar')){

                $user->typeofcar  =$input['typeofcar'];
                $user->save();
              }
              if ($request->has('number')){

                $user->number  =$input['number'];
                $user->save();
              }

              return $this->sendResponse(new TaxiResources($user),'profile update successfully');


    }

}
